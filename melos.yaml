name: studyu-packages

repository: https://github.com/hpi-studyu/studyu

packages:
  - 'app/*'
  - 'designer/*'
  - 'designer_v2/*'
  - 'core/*'
  - 'flutter_common/*'
  - 'repo_generator/*'
  - 'notebook_uploader/*'

command:
  version:
    linkToCommits: true

scripts:
  analyze:
    run: |
      melos exec -c 6 -- \
        "flutter analyze --fatal-infos ."
    description: |
      Run `dart analyze` in all packages.
       - Note: you can also rely on your IDEs Dart Analysis / Issues window.

  format:
    run: |
      melos exec -c 6 -- \
        "dart format -l 120 ."
    description: Format all code

  fix:
    run: |
      melos exec -c 6 -- \
        "dart fix --apply"
    description: Fix auto-fixable lint errors

  format:ci:
    run: |
      melos exec -c 6 -- \
        "find . -name "*.dart" ! -name "*.g.dart" ! -path '*/generated/*' ! -path './proto/*' | tr '\n' ' ' | xargs dart format -l 120 --set-exit-if-changed"
    description: Format all code without generated files

  outdated:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter pub outdated"
    description: Check all outdated dependencies

  upgrade:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter pub upgrade" && melos bootstrap
    description: Check all outdated dependencies

  test:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter test"
    description: Run `flutter test` for a specific package.
    select-package:
      dir-exists: test

  generate:
    run: |
      melos exec -c 1 --fail-fast -- \
        "flutter pub run build_runner build --delete-conflicting-outputs"
    description: Generate files with build_runner
    select-package:
      scope: studyu_core

  build:android:
    run: |
      melos exec -c 2 --fail-fast -- \
        "flutter build apk --no-tree-shake-icons --multidex"
    description: Build app for Android.
    select-package:
      dir-exists: android

  build:ios:
    run: |
      melos exec -c 2 --fail-fast -- \
        "flutter build ipa --no-codesign --no-tree-shake-icons"
    description: Build app for iOS.
    select-package:
      dir-exists: ios

  build:web:
    run: |
      melos exec -c 2 --fail-fast -- \
        "flutter build web --web-renderer auto --no-tree-shake-icons"
    description: Build app for Web.
    select-package:
      dir-exists: web

  build:web:staging:
    run: |
      melos exec -c 2 --fail-fast -- \
        "flutter build web --web-renderer auto --no-tree-shake-icons --dart-define=ENV=.env.staging"
    description: Build web staging.
    select-package:
      dir-exists: web

  build:web:app:
    run: |
      melos exec -c 1 --fail-fast -- \
        "flutter build web --web-renderer auto --no-tree-shake-icons"
    description: Build app for Web.
    select-package:
      scope: studyu_app

  build:web:designer:
    run: |
      melos exec -c 1 --fail-fast -- \
        "flutter build web --web-renderer auto --no-tree-shake-icons"
    description: Build designer for Web.
    select-package:
      scope: studyu_designer

  build:web:designer_v2:
    run: |
      melos exec -c 1 --fail-fast -- \
        "flutter build web --web-renderer auto --no-tree-shake-icons"
    description: Build designer_v2 for Web.
    select-package:
      scope: studyu_designer_v2

  # Build for Docker and a self-hosted Supabase instance
  build:web:app:selfhost:
    run: |
      melos exec -c 1 --fail-fast -- \
        "flutter build web --web-renderer auto --no-tree-shake-icons --dart-define=ENV=.env.selfhost"
    description: Build app for Docker and self-hosted Supabase instance.
    select-package:
      scope: studyu_app

  build:web:designer:selfhost:
    run: |
      melos exec -c 1 --fail-fast -- \
        "flutter build web --web-renderer auto --no-tree-shake-icons --dart-define=ENV=.env.selfhost"
    description: Build designer for Docker and self-hosted Supabase instance.
    select-package:
      scope: studyu_designer

  # Used to test Designer "Try out study" feature, where the designer opens the App using the user auth token from designer
  app:web:local:
    run: |
      melos exec -c 1 -- \
        "flutter run lib/main.dart -d chrome --web-port 3001 --dart-define=ENV=.env.local"
    select-package:
      scope: studyu_app
    description: Runs app in chrome on port 3001 with local env

  designer:web:local:
    run: |
      melos exec -c 1 -- \
        "flutter run lib/main.dart -d chrome --web-port 3000 --dart-define=ENV=.env.local"
    select-package:
      scope: studyu_designer
    description: Runs designer in chrome on port 3000 with local env

# Clean things very deeply, can be used to establish "pristine checkout" status
clean:deep: >
  git clean -x -d -f -q

# Additional cleanup lifecycle script, executed when `melos clean` is ran.
postclean: >
  melos exec --flutter --concurrency=3 -- "flutter clean"
