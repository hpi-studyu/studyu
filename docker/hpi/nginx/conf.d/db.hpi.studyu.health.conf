map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

access_log /var/log/nginx/db.access.log main;
error_log /var/log/nginx/db.error.log;

tcp_nopush on;
tcp_nodelay on;

types_hash_max_size 2048;

server_tokens off;

gzip on;
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
gzip_vary on;
gzip_proxied any;
gzip_comp_level 6;
gzip_buffers 16 8k;
gzip_http_version 1.1;

# include /path/to/postgres.conf;

#  server {
#     listen 80;
#    server_name db.hpi.studyu.health;
#    return 301 https://$server_name$request_uri;
#}

# this is the internal Docker DNS, cache only for 30s
resolver 127.0.0.11 valid=30s;

server {
    # listen 80;
    listen 443 ssl;

    server_name db.hpi.studyu.health;

    include /etc/nginx/conf.d/common.conf;

    ssl_certificate /etc/letsencrypt/live/hpi.studyu.health/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hpi.studyu.health/privkey.pem;
    # include /etc/nginx/conf.d/ssl.conf;

    client_max_body_size 100m;

    set $studio http://studio:3000;
    set $kong http://kong:8000;

    # REST API
    location ~ ^/rest/v1/(.*)$ {
        proxy_pass $kong;
        include     /etc/nginx/conf.d/common_location.conf;
    }

    # GraphQL
    location ~ ^/graphql/v1/(.*)$ {
        proxy_pass $kong;
        include     /etc/nginx/conf.d/common_location.conf;
    }

    # Realtime
    location ~ ^/realtime/v1/(.*)$ {
        proxy_pass $kong;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        include     /etc/nginx/conf.d/common_location.conf;
    }

    # Authentication
    location ~ ^/auth/v1/(.*)$ {
        proxy_pass $kong;
        include     /etc/nginx/conf.d/common_location.conf;
    }

    # Storage
    location ~ ^/storage/v1/(.*)$ {
        proxy_pass $kong;
        include     /etc/nginx/conf.d/common_location.conf;
    }

    # Studio
    location / {
        proxy_pass $studio;
        include     /etc/nginx/conf.d/common_location.conf;

        # Enable both IP and basic auth conditions have to be satisfied
        # satisfy all;

        # Enable IP range that should be allowed or blocked
        # deny  192.168.1.2;
        # allow 192.168.1.1/24;
        # allow 127.0.0.1;
        # deny  all;

        # Basic authentication for supabase studio backend
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }
    
    # Edge Functions (example)
    # location /my-edge-function {
      # proxy_pass http://localhost:9000;
      # proxy_set_header Host $host;
      # proxy_set_header X-Real-IP $remote_addr;
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }
}